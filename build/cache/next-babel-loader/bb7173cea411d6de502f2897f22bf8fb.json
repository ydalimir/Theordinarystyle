{"ast":null,"code":"var _jsxFileName = \"/home/ydalimir/Escritorio/client/pages/games/[platform].js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Loader } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { size } from \"lodash\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\nimport { getGamesPlatformApi, getTotalGamesPlatformApi } from \"../../api/game\";\nimport ListGames from \"../../components/ListGames\";\nimport Pagination from \"../../components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limitPerPage = 20;\nexport default function Platform() {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: games,\n    1: setGames\n  } = useState(null);\n  const {\n    0: totalGames,\n    1: setTotalGames\n  } = useState(null);\n\n  const getStartItem = () => {\n    const currentPages = parseInt(query.page);\n    if (!query.page || currentPages === 1) return 0;else return currentPages * limitPerPage - limitPerPage;\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (query.platform) {\n        const response = await getGamesPlatformApi(query.platform, limitPerPage, getStartItem());\n        setGames(response);\n      }\n    })();\n  }, [query]);\n  useEffect(() => {\n    (async () => {\n      const response = await getTotalGamesPlatformApi(query.platform);\n      setTotalGames(response);\n    })();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(BasicLayout, {\n    className: \"platform\",\n    children: [!games && /*#__PURE__*/_jsxDEV(Loader, {\n      active: true,\n      children: \"Cargando Productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this), games && size(games) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No hay Productos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), size(games) > 0 && /*#__PURE__*/_jsxDEV(ListGames, {\n      games: games\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), totalGames ? /*#__PURE__*/_jsxDEV(Pagination, {\n      totalGames: totalGames,\n      page: query.page ? parseInt(query.page) : 1,\n      limitPerPage: limitPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/pages/games/[platform].js"],"names":["React","useState","useEffect","Loader","useRouter","size","BasicLayout","getGamesPlatformApi","getTotalGamesPlatformApi","ListGames","Pagination","limitPerPage","Platform","query","games","setGames","totalGames","setTotalGames","getStartItem","currentPages","parseInt","page","platform","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,mBAAT,EAA8BC,wBAA9B,QAA8D,gBAA9D;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYT,SAAS,EAA3B;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACe,UAAD;AAAA,OAAaC;AAAb,MAA8BhB,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMiB,YAAY,GAAG,MAAM;AACzB,UAAMC,YAAY,GAAGC,QAAQ,CAACP,KAAK,CAACQ,IAAP,CAA7B;AACA,QAAI,CAACR,KAAK,CAACQ,IAAP,IAAeF,YAAY,KAAK,CAApC,EAAuC,OAAO,CAAP,CAAvC,KACK,OAAOA,YAAY,GAAGR,YAAf,GAA8BA,YAArC;AACN,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAIW,KAAK,CAACS,QAAV,EAAoB;AAClB,cAAMC,QAAQ,GAAG,MAAMhB,mBAAmB,CACxCM,KAAK,CAACS,QADkC,EAExCX,YAFwC,EAGxCO,YAAY,EAH4B,CAA1C;AAKAH,QAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD;AACF,KATD;AAUD,GAXQ,EAWN,CAACV,KAAD,CAXM,CAAT;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMqB,QAAQ,GAAG,MAAMf,wBAAwB,CAACK,KAAK,CAACS,QAAP,CAA/C;AACAL,MAAAA,aAAa,CAACM,QAAD,CAAb;AACD,KAHD;AAID,GALQ,EAKN,CAACV,KAAD,CALM,CAAT;AAOA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA,eACG,CAACC,KAAD,iBAAU,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADb,EAEGA,KAAK,IAAIT,IAAI,CAACS,KAAD,CAAJ,KAAgB,CAAzB,iBACC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGT,IAAI,CAACS,KAAD,CAAJ,GAAc,CAAd,iBAAmB,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPtB,EASGE,UAAU,gBACT,QAAC,UAAD;AACE,MAAA,UAAU,EAAEA,UADd;AAEE,MAAA,IAAI,EAAEH,KAAK,CAACQ,IAAN,GAAaD,QAAQ,CAACP,KAAK,CAACQ,IAAP,CAArB,GAAoC,CAF5C;AAGE,MAAA,YAAY,EAAEV;AAHhB;AAAA;AAAA;AAAA;AAAA,YADS,GAMP,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Loader } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { size } from \"lodash\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\nimport { getGamesPlatformApi, getTotalGamesPlatformApi } from \"../../api/game\";\nimport ListGames from \"../../components/ListGames\";\nimport Pagination from \"../../components/Pagination\";\n\nconst limitPerPage = 20;\n\nexport default function Platform() {\n  const { query } = useRouter();\n  const [games, setGames] = useState(null);\n  const [totalGames, setTotalGames] = useState(null);\n\n  const getStartItem = () => {\n    const currentPages = parseInt(query.page);\n    if (!query.page || currentPages === 1) return 0;\n    else return currentPages * limitPerPage - limitPerPage;\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (query.platform) {\n        const response = await getGamesPlatformApi(\n          query.platform,\n          limitPerPage,\n          getStartItem()\n        );\n        setGames(response);\n      }\n    })();\n  }, [query]);\n\n  useEffect(() => {\n    (async () => {\n      const response = await getTotalGamesPlatformApi(query.platform);\n      setTotalGames(response);\n    })();\n  }, [query]);\n\n  return (\n    <BasicLayout className=\"platform\">\n      {!games && <Loader active>Cargando Productos</Loader>}\n      {games && size(games) === 0 && (\n        <div>\n          <h3>No hay Productos</h3>\n        </div>\n      )}\n      {size(games) > 0 && <ListGames games={games} />}\n\n      {totalGames ? (\n        <Pagination\n          totalGames={totalGames}\n          page={query.page ? parseInt(query.page) : 1}\n          limitPerPage={limitPerPage}\n        />\n      ) : null}\n    </BasicLayout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}