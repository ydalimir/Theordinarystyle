{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nexport function createAddressApi(_x, _x2) {\n  return _createAddressApi.apply(this, arguments);\n}\n\nfunction _createAddressApi() {\n  _createAddressApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/addresses\");\n            params = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(address)\n            };\n            _context.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n  return _createAddressApi.apply(this, arguments);\n}\n\nexport function getAddressesApi(_x3, _x4) {\n  return _getAddressesApi.apply(this, arguments);\n}\n\nfunction _getAddressesApi() {\n  _getAddressesApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(idUser, logout) {\n    var url, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/addresses?user=\").concat(idUser);\n            _context2.next = 4;\n            return authFetch(url, null, logout);\n\n          case 4:\n            result = _context2.sent;\n\n            if (!(result.statusCode === 500)) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw \"Error del servidor\";\n\n          case 7:\n            return _context2.abrupt(\"return\", result);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            return _context2.abrupt(\"return\", null);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n  return _getAddressesApi.apply(this, arguments);\n}\n\nexport function deleteAddressApi(_x5, _x6) {\n  return _deleteAddressApi.apply(this, arguments);\n}\n\nfunction _deleteAddressApi() {\n  _deleteAddressApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(idAddress, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/addresses/\").concat(idAddress);\n            params = {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context3.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context3.sent;\n\n            if (!(result.statusCode === 500)) {\n              _context3.next = 8;\n              break;\n            }\n\n            throw \"Error del servidor\";\n\n          case 8:\n            return _context3.abrupt(\"return\", true);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            return _context3.abrupt(\"return\", false);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n  return _deleteAddressApi.apply(this, arguments);\n}\n\nexport function updateAddressApi(_x7, _x8, _x9) {\n  return _updateAddressApi.apply(this, arguments);\n}\n\nfunction _updateAddressApi() {\n  _updateAddressApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(idAddress, address, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/addresses/\").concat(idAddress);\n            params = {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(address)\n            };\n            _context4.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n            return _context4.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 9]]);\n  }));\n  return _updateAddressApi.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/api/address.js"],"names":["BASE_PATH","authFetch","createAddressApi","address","logout","url","params","method","headers","body","JSON","stringify","result","console","log","getAddressesApi","idUser","statusCode","deleteAddressApi","idAddress","updateAddressApi"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,gBAAsBC,gBAAtB;AAAA;AAAA;;;+EAAO,iBAAgCC,OAAhC,EAAyCC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,GAFH,aAEYL,SAFZ;AAGGM,YAAAA,MAHH,GAGY;AACbC,cAAAA,MAAM,EAAE,MADK;AAEbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFI;AAKbC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALO,aAHZ;AAAA;AAAA,mBAUkBF,SAAS,CAACI,GAAD,EAAMC,MAAN,EAAcF,MAAd,CAV3B;;AAAA;AAUGQ,YAAAA,MAVH;AAAA,6CAWIA,MAXJ;;AAAA;AAAA;AAAA;AAaHC,YAAAA,OAAO,CAACC,GAAR;AAbG,6CAcI,IAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsBC,eAAtB;AAAA;AAAA;;;8EAAO,kBAA+BC,MAA/B,EAAuCZ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,GAFH,aAEYL,SAFZ,6BAEwCgB,MAFxC;AAAA;AAAA,mBAGkBf,SAAS,CAACI,GAAD,EAAM,IAAN,EAAYD,MAAZ,CAH3B;;AAAA;AAGGQ,YAAAA,MAHH;;AAAA,kBAICA,MAAM,CAACK,UAAP,KAAsB,GAJvB;AAAA;AAAA;AAAA;;AAAA,kBAIkC,oBAJlC;;AAAA;AAAA,8CAKIL,MALJ;;AAAA;AAAA;AAAA;AAOHC,YAAAA,OAAO,CAACC,GAAR;AAPG,8CAQI,IARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,gBAAsBI,gBAAtB;AAAA;AAAA;;;+EAAO,kBAAgCC,SAAhC,EAA2Cf,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,GAFH,aAEYL,SAFZ,wBAEmCmB,SAFnC;AAGGb,YAAAA,MAHH,GAGY;AACbC,cAAAA,MAAM,EAAE,QADK;AAEbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAFI,aAHZ;AAAA;AAAA,mBASkBP,SAAS,CAACI,GAAD,EAAMC,MAAN,EAAcF,MAAd,CAT3B;;AAAA;AASGQ,YAAAA,MATH;;AAAA,kBAUCA,MAAM,CAACK,UAAP,KAAsB,GAVvB;AAAA;AAAA;AAAA;;AAAA,kBAUkC,oBAVlC;;AAAA;AAAA,8CAWI,IAXJ;;AAAA;AAAA;AAAA;AAaHJ,YAAAA,OAAO,CAACC,GAAR;AAbG,8CAcI,KAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsBM,gBAAtB;AAAA;AAAA;;;+EAAO,kBAAgCD,SAAhC,EAA2ChB,OAA3C,EAAoDC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,GAFH,aAEYL,SAFZ,wBAEmCmB,SAFnC;AAGGb,YAAAA,MAHH,GAGY;AACbC,cAAAA,MAAM,EAAE,KADK;AAEbC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFI;AAKbC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALO,aAHZ;AAAA;AAAA,mBAUkBF,SAAS,CAACI,GAAD,EAAMC,MAAN,EAAcF,MAAd,CAV3B;;AAAA;AAUGQ,YAAAA,MAVH;AAAA,8CAWIA,MAXJ;;AAAA;AAAA;AAAA;AAaHC,YAAAA,OAAO,CAACC,GAAR;AAbG,8CAcI,IAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\n\nexport async function createAddressApi(address, logout) {\n  try {\n    const url = `${BASE_PATH}/addresses`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(address),\n    };\n    const result = await authFetch(url, params, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getAddressesApi(idUser, logout) {\n  try {\n    const url = `${BASE_PATH}/addresses?user=${idUser}`;\n    const result = await authFetch(url, null, logout);\n    if (result.statusCode === 500) throw \"Error del servidor\";\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function deleteAddressApi(idAddress, logout) {\n  try {\n    const url = `${BASE_PATH}/addresses/${idAddress}`;\n    const params = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const result = await authFetch(url, params, logout);\n    if (result.statusCode === 500) throw \"Error del servidor\";\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n}\n\nexport async function updateAddressApi(idAddress, address, logout) {\n  try {\n    const url = `${BASE_PATH}/addresses/${idAddress}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(address),\n    };\n    const result = await authFetch(url, params, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}