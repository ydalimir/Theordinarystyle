{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { updateEmailApi } from \"../../../api/user\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ChangeEmailForm(props) {\n  const {\n    user,\n    logout,\n    setReloadUser\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await updateEmailApi(user.id, formData.email, logout);\n\n      if (!response || (response === null || response === void 0 ? void 0 : response.statusCode) === 400) {\n        toast.error(\"Error al actualizar el email\");\n      } else {\n        setReloadUser(true);\n        toast.success(\"Email acutalizado\");\n        formik.handleReset();\n      }\n\n      setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"change-email-form\",\n    children: [/*#__PURE__*/_jsxs(\"h4\", {\n      children: [\"Cambia tu e-mail \", /*#__PURE__*/_jsxs(\"span\", {\n        children: [\"(Tu e-mail actual: \", user.email, \")\"]\n      })]\n    }), /*#__PURE__*/_jsxs(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxs(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsx(Form.Input, {\n          name: \"email\",\n          placeholder: \"Tu nuevo e-mail\",\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          error: formik.errors.email\n        }), /*#__PURE__*/_jsx(Form.Input, {\n          name: \"repeatEmail\",\n          placeholder: \"Confirma tu nuevo e-mail\",\n          onChange: formik.handleChange,\n          value: formik.values.repeatEmail,\n          error: formik.errors.repeatEmail\n        })]\n      }), /*#__PURE__*/_jsx(Button, {\n        className: \"submit\",\n        loading: loading,\n        children: \"Actualizar\"\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    repeatEmail: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email(true).required(true).oneOf([Yup.ref(\"repeatEmail\")], true),\n    repeatEmail: Yup.string().email(true).required(true).oneOf([Yup.ref(\"email\")], true)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}