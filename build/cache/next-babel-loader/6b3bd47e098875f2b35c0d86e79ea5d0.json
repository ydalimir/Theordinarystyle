{"ast":null,"code":"import { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nimport { size } from \"lodash\";\nexport async function isFavoriteApi(idUser, idGame, logout) {\n  try {\n    const url = `${BASE_PATH}/favorites?user=${idUser}&game=${idGame}`;\n    return await authFetch(url, null, logout);\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function addFavoriteApi(idUser, idGame, logout) {\n  try {\n    const dataFound = await isFavoriteApi(idUser, idGame, logout);\n\n    if (size(dataFound) > 0 || !dataFound) {\n      return \"Este juego ya lo tienes en tu lista de favoritos\";\n    } else {\n      const url = `${BASE_PATH}/favorites`;\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: idUser,\n          game: idGame\n        })\n      };\n      const result = await authFetch(url, params, logout);\n      return result;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function deleteFavoriteApi(idUser, idGame, logout) {\n  try {\n    const dataFound = await isFavoriteApi(idUser, idGame, logout);\n\n    if (size(dataFound) > 0) {\n      var _dataFound$;\n\n      const url = `${BASE_PATH}/favorites/${(_dataFound$ = dataFound[0]) === null || _dataFound$ === void 0 ? void 0 : _dataFound$._id}`;\n      const params = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const result = authFetch(url, params, logout);\n      return result;\n    }\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getFavoriteApi(idUser, logout) {\n  try {\n    const url = `${BASE_PATH}/favorites?user=${idUser}`;\n    const result = await authFetch(url, null, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}