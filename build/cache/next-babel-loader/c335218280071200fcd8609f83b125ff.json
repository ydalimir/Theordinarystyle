{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport jwtDecode from \"jwt-decode\";\nimport { useRouter } from \"next/router\";\nimport AuthContext from \"../context/AuthContext\";\nimport CartContext from \"../context/CartContext\";\nimport { setToken, getToken, removeToken } from \"../api/token\";\nimport { getProductsCart, addProductCart, countProductsCart, removeProductCart, removeAllProductsCart } from \"../api/cart\";\nimport \"../scss/global.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(undefined);\n  const {\n    0: realoadUser,\n    1: setReloadUser\n  } = useState(false);\n  const {\n    0: totalProductsCart,\n    1: setTotalProductsCart\n  } = useState(0);\n  const {\n    0: reloadCart,\n    1: setReloadCart\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    const token = getToken();\n\n    if (token) {\n      setAuth({\n        token,\n        idUser: jwtDecode(token).id\n      });\n    } else {\n      setAuth(null);\n    }\n\n    setReloadUser(false);\n  }, [realoadUser]);\n  useEffect(() => {\n    setTotalProductsCart(countProductsCart());\n    setReloadCart(false);\n  }, [reloadCart, auth]);\n\n  const login = token => {\n    setToken(token);\n    setAuth({\n      token,\n      idUser: jwtDecode(token).id\n    });\n  };\n\n  const logout = () => {\n    if (auth) {\n      removeToken();\n      setAuth(null);\n      router.push(\"/\");\n    }\n  };\n\n  const addProduct = product => {\n    const token = getToken();\n\n    if (token) {\n      addProductCart(product);\n      setReloadCart(true);\n    } else {\n      toast.warning(\"Para comprar un juego tienes que iniciar sesiÃ³n\");\n    }\n  };\n\n  const removeProduct = product => {\n    removeProductCart(product);\n    setReloadCart(true);\n  };\n\n  const authData = useMemo(() => ({\n    auth,\n    login,\n    logout,\n    setReloadUser\n  }), [auth]);\n  const cartData = useMemo(() => ({\n    productsCart: totalProductsCart,\n    addProductCart: product => addProduct(product),\n    getProductsCart: getProductsCart,\n    removeProductCart: product => removeProduct(product),\n    removeAllProductsCart: removeAllProductsCart\n  }), [totalProductsCart]);\n  if (auth === undefined) return null;\n  return /*#__PURE__*/_jsx(AuthContext.Provider, {\n    value: authData,\n    children: /*#__PURE__*/_jsxs(CartContext.Provider, {\n      value: cartData,\n      children: [/*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps)), /*#__PURE__*/_jsx(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: false,\n        draggable: true,\n        pauseOnHover: true\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}