{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ydalimir/Documentos/GitHub/client/components/Cart/Payment/FormPayment/FormPayment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport { size } from \"lodash\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport useCart from \"../../../../hooks/useCart\";\nimport { paymentCartApi } from \"../../../../api/cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPayment(props) {\n  _s();\n\n  var products = props.products,\n      address = props.address;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useAuth = useAuth(),\n      auth = _useAuth.auth,\n      logout = _useAuth.logout;\n\n  var _useCart = useCart(),\n      removeAllProductsCart = _useCart.removeAllProductsCart;\n\n  var router = useRouter();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var cardElement, result, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setLoading(true);\n\n              if (!(!stripe || !elements)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              cardElement = elements.getElement(CardElement);\n              _context.next = 7;\n              return stripe.createToken(cardElement);\n\n            case 7:\n              result = _context.sent;\n\n              if (!result.error) {\n                _context.next = 12;\n                break;\n              }\n\n              toast.error(result.error.message);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.next = 14;\n              return paymentCartApi(result.token, products, auth.idUser, address, logout);\n\n            case 14:\n              response = _context.sent;\n\n              if (size(response) > 0) {\n                toast.success(\"Pedido completado\");\n                removeAllProductsCart();\n                router.push(\"/orders\");\n              } else {\n                toast.error(\"Error al realizar el pedido\");\n              }\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-payment\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      loading: loading,\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormPayment, \"W0EPUrqZuL5W2tnZ4AOFakAQqOg=\", false, function () {\n  return [useStripe, useElements, useAuth, useCart, useRouter];\n});\n\n_c = FormPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPayment\");","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/client/components/Cart/Payment/FormPayment/FormPayment.js"],"names":["React","useState","Button","useRouter","CardElement","useStripe","useElements","toast","size","useAuth","useCart","paymentCartApi","FormPayment","props","products","address","loading","setLoading","stripe","elements","auth","logout","removeAllProductsCart","router","handleSubmit","event","preventDefault","cardElement","getElement","createToken","result","error","message","token","idUser","response","success","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,MAAQC,QAAR,GAA8BD,KAA9B,CAAQC,QAAR;AAAA,MAAkBC,OAAlB,GAA8BF,KAA9B,CAAkBE,OAAlB;;AACA,kBAA8Bd,QAAQ,CAAC,KAAD,CAAtC;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,MAAM,GAAGb,SAAS,EAAxB;AACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B;;AACA,iBAAyBG,OAAO,EAAhC;AAAA,MAAQW,IAAR,YAAQA,IAAR;AAAA,MAAcC,MAAd,YAAcA,MAAd;;AACA,iBAAkCX,OAAO,EAAzC;AAAA,MAAQY,qBAAR,YAAQA,qBAAR;;AACA,MAAMC,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,MAAMqB,YAAY;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACC,cAAN;AACAT,cAAAA,UAAU,CAAC,IAAD,CAAV;;AAFmB,oBAIf,CAACC,MAAD,IAAW,CAACC,QAJG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAMbQ,cAAAA,WANa,GAMCR,QAAQ,CAACS,UAAT,CAAoBxB,WAApB,CAND;AAAA;AAAA,qBAOEc,MAAM,CAACW,WAAP,CAAmBF,WAAnB,CAPF;;AAAA;AAObG,cAAAA,MAPa;;AAAA,mBASfA,MAAM,CAACC,KATQ;AAAA;AAAA;AAAA;;AAUjBxB,cAAAA,KAAK,CAACwB,KAAN,CAAYD,MAAM,CAACC,KAAP,CAAaC,OAAzB;AAViB;AAAA;;AAAA;AAAA;AAAA,qBAYMrB,cAAc,CACnCmB,MAAM,CAACG,KAD4B,EAEnCnB,QAFmC,EAGnCM,IAAI,CAACc,MAH8B,EAInCnB,OAJmC,EAKnCM,MALmC,CAZpB;;AAAA;AAYXc,cAAAA,QAZW;;AAoBjB,kBAAI3B,IAAI,CAAC2B,QAAD,CAAJ,GAAiB,CAArB,EAAwB;AACtB5B,gBAAAA,KAAK,CAAC6B,OAAN,CAAc,mBAAd;AACAd,gBAAAA,qBAAqB;AACrBC,gBAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ;AACD,eAJD,MAIO;AACL9B,gBAAAA,KAAK,CAACwB,KAAN,CAAY,6BAAZ;AACD;;AA1BgB;AA6BnBd,cAAAA,UAAU,CAAC,KAAD,CAAV;;AA7BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZO,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAgCA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEA,YAAzC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAER,OAA/B;AAAwC,MAAA,QAAQ,EAAE,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjDuBN,W;UAGPP,S,EACEC,W,EACQG,O,EACSC,O,EACnBP,S;;;KAPOS,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport { size } from \"lodash\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport useCart from \"../../../../hooks/useCart\";\nimport { paymentCartApi } from \"../../../../api/cart\";\n\nexport default function FormPayment(props) {\n  const { products, address } = props;\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const { auth, logout } = useAuth();\n  const { removeAllProductsCart } = useCart();\n  const router = useRouter();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    if (!stripe || !elements) return;\n\n    const cardElement = elements.getElement(CardElement);\n    const result = await stripe.createToken(cardElement);\n\n    if (result.error) {\n      toast.error(result.error.message);\n    } else {\n      const response = await paymentCartApi(\n        result.token,\n        products,\n        auth.idUser,\n        address,\n        logout\n      );\n\n      if (size(response) > 0) {\n        toast.success(\"Pedido completado\");\n        removeAllProductsCart();\n        router.push(\"/orders\");\n      } else {\n        toast.error(\"Error al realizar el pedido\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <form className=\"form-payment\" onSubmit={handleSubmit}>\n      <CardElement />\n      <Button type=\"submit\" loading={loading} disabled={!stripe}>\n        Pagar\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}