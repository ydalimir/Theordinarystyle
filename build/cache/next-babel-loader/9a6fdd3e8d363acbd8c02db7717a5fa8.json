{"ast":null,"code":"var _jsxFileName = \"/home/ydalimir/Documentos/GitHub/client/components/Cart/Payment/FormPayment/FormPayment.js\";\nimport React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport { size } from \"lodash\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport useCart from \"../../../../hooks/useCart\";\nimport { paymentCartApi } from \"../../../../api/cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPayment(props) {\n  const {\n    products,\n    address\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    auth,\n    logout\n  } = useAuth();\n  const {\n    removeAllProductsCart\n  } = useCart();\n  const router = useRouter();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    const result = await stripe.createToken(cardElement);\n\n    if (result.error) {\n      toast.error(result.error.message);\n    } else {\n      const response = await paymentCartApi(result.token, products, auth.idUser, address, logout);\n\n      if (size(response) > 0) {\n        toast.success(\"Pedido completado\");\n        removeAllProductsCart();\n        router.push(\"/orders\");\n      } else {\n        toast.error(\"Error al realizar el pedido\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-payment\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      loading: loading,\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/client/components/Cart/Payment/FormPayment/FormPayment.js"],"names":["React","useState","Button","useRouter","CardElement","useStripe","useElements","toast","size","useAuth","useCart","paymentCartApi","FormPayment","props","products","address","loading","setLoading","stripe","elements","auth","logout","removeAllProductsCart","router","handleSubmit","event","preventDefault","cardElement","getElement","result","createToken","error","message","response","token","idUser","success","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBF,KAA9B;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMiB,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBZ,OAAO,EAAhC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAA4BZ,OAAO,EAAzC;AACA,QAAMa,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,QAAMqB,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAI,CAACC,MAAD,IAAW,CAACC,QAAhB,EAA0B;AAE1B,UAAMQ,WAAW,GAAGR,QAAQ,CAACS,UAAT,CAAoBxB,WAApB,CAApB;AACA,UAAMyB,MAAM,GAAG,MAAMX,MAAM,CAACY,WAAP,CAAmBH,WAAnB,CAArB;;AAEA,QAAIE,MAAM,CAACE,KAAX,EAAkB;AAChBxB,MAAAA,KAAK,CAACwB,KAAN,CAAYF,MAAM,CAACE,KAAP,CAAaC,OAAzB;AACD,KAFD,MAEO;AACL,YAAMC,QAAQ,GAAG,MAAMtB,cAAc,CACnCkB,MAAM,CAACK,KAD4B,EAEnCpB,QAFmC,EAGnCM,IAAI,CAACe,MAH8B,EAInCpB,OAJmC,EAKnCM,MALmC,CAArC;;AAQA,UAAIb,IAAI,CAACyB,QAAD,CAAJ,GAAiB,CAArB,EAAwB;AACtB1B,QAAAA,KAAK,CAAC6B,OAAN,CAAc,mBAAd;AACAd,QAAAA,qBAAqB;AACrBC,QAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ;AACD,OAJD,MAIO;AACL9B,QAAAA,KAAK,CAACwB,KAAN,CAAY,6BAAZ;AACD;AACF;;AAEDd,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GA9BD;;AAgCA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEO,YAAzC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAER,OAA/B;AAAwC,MAAA,QAAQ,EAAE,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport { size } from \"lodash\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport useCart from \"../../../../hooks/useCart\";\nimport { paymentCartApi } from \"../../../../api/cart\";\n\nexport default function FormPayment(props) {\n  const { products, address } = props;\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const { auth, logout } = useAuth();\n  const { removeAllProductsCart } = useCart();\n  const router = useRouter();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    if (!stripe || !elements) return;\n\n    const cardElement = elements.getElement(CardElement);\n    const result = await stripe.createToken(cardElement);\n\n    if (result.error) {\n      toast.error(result.error.message);\n    } else {\n      const response = await paymentCartApi(\n        result.token,\n        products,\n        auth.idUser,\n        address,\n        logout\n      );\n\n      if (size(response) > 0) {\n        toast.success(\"Pedido completado\");\n        removeAllProductsCart();\n        router.push(\"/orders\");\n      } else {\n        toast.error(\"Error al realizar el pedido\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <form className=\"form-payment\" onSubmit={handleSubmit}>\n      <CardElement />\n      <Button type=\"submit\" loading={loading} disabled={!stripe}>\n        Pagar\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}