{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { updateNameApi } from \"../../../api/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChangeNameForm(props) {\n  const {\n    user,\n    logout,\n    setReloadUser\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initialValues(user.name, user.lastname),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await updateNameApi(user.id, formData, logout);\n\n      if (!response) {\n        toast.error(\"Error al actualizar el nombre y apellidos\");\n      } else {\n        setReloadUser(true);\n        toast.success(\"Nombre y apellidos actualizado\");\n      }\n\n      setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"change-name-form\",\n    children: [/*#__PURE__*/_jsx(\"h4\", {\n      children: \"Cambia tu nombre y apellidos\"\n    }), /*#__PURE__*/_jsxs(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxs(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsx(Form.Input, {\n          name: \"name\",\n          placeholder: \"Tu nuevo nombre\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          error: formik.errors.name\n        }), /*#__PURE__*/_jsx(Form.Input, {\n          name: \"lastname\",\n          placeholder: \"Tus nuevos apellidos\",\n          onChange: formik.handleChange,\n          value: formik.values.lastname,\n          error: formik.errors.lastname\n        })]\n      }), /*#__PURE__*/_jsx(Button, {\n        className: \"submit\",\n        loading: loading,\n        children: \"Actualizar\"\n      })]\n    })]\n  });\n}\n\nfunction initialValues(name, lastname) {\n  return {\n    name: name || \"\",\n    lastname: lastname || \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    name: Yup.string().required(true),\n    lastname: Yup.string().required(true)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}