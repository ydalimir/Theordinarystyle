{"ast":null,"code":"var _jsxFileName = \"/home/ydalimir/Escritorio/client/components/Account/ListAddress/ListAddress.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { map, size } from \"lodash\";\nimport { getAddressesApi, deleteAddressApi } from \"../../../api/address\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListAddress(props) {\n  const {\n    reloadAddreses,\n    setReloadAddreses,\n    openModal\n  } = props;\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState(null);\n  const {\n    auth,\n    logout\n  } = useAuth();\n  useEffect(() => {\n    (async () => {\n      const response = await getAddressesApi(auth.idUser, logout);\n      setAddresses(response || []);\n      setReloadAddreses(false);\n    })();\n  }, [reloadAddreses]);\n  if (!addresses) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-address\",\n    children: size(addresses) === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No hay ninguna direcci\\xF3n creada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      children: map(addresses, address => /*#__PURE__*/_jsxDEV(Grid.Column, {\n        mobile: 16,\n        tablet: 8,\n        computer: 4,\n        children: /*#__PURE__*/_jsxDEV(Address, {\n          address: address,\n          logout: logout,\n          setReloadAddreses: setReloadAddreses,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, address.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Address(props) {\n  const {\n    address,\n    logout,\n    setReloadAddreses,\n    openModal\n  } = props;\n  const {\n    0: loadingDelete,\n    1: setLoadingDelete\n  } = useState(false);\n\n  const deleteAddress = async () => {\n    setLoadingDelete(true);\n    const response = await deleteAddressApi(address._id, logout);\n    if (response) setReloadAddreses(true);\n    setLoadingDelete(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"address\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: address.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [address.state, \", \", address.city, \" \", address.postalCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address.phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: () => openModal(`Editar: ${address.title}`, address),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: deleteAddress,\n        loading: loadingDelete,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/components/Account/ListAddress/ListAddress.js"],"names":["React","useState","useEffect","Grid","Button","map","size","getAddressesApi","deleteAddressApi","useAuth","ListAddress","props","reloadAddreses","setReloadAddreses","openModal","addresses","setAddresses","auth","logout","response","idUser","address","id","Address","loadingDelete","setLoadingDelete","deleteAddress","_id","title","name","state","city","postalCode","phone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { map, size } from \"lodash\";\nimport { getAddressesApi, deleteAddressApi } from \"../../../api/address\";\nimport useAuth from \"../../../hooks/useAuth\";\n\nexport default function ListAddress(props) {\n  const { reloadAddreses, setReloadAddreses, openModal } = props;\n  const [addresses, setAddresses] = useState(null);\n  const { auth, logout } = useAuth();\n\n  useEffect(() => {\n    (async () => {\n      const response = await getAddressesApi(auth.idUser, logout);\n      setAddresses(response || []);\n      setReloadAddreses(false);\n    })();\n  }, [reloadAddreses]);\n\n  if (!addresses) return null;\n\n  return (\n    <div className=\"list-address\">\n      {size(addresses) === 0 ? (\n        <h3>No hay ninguna direcciÃ³n creada</h3>\n      ) : (\n        <Grid>\n          {map(addresses, (address) => (\n            <Grid.Column key={address.id} mobile={16} tablet={8} computer={4}>\n              <Address\n                address={address}\n                logout={logout}\n                setReloadAddreses={setReloadAddreses}\n                openModal={openModal}\n              />\n            </Grid.Column>\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nfunction Address(props) {\n  const { address, logout, setReloadAddreses, openModal } = props;\n  const [loadingDelete, setLoadingDelete] = useState(false);\n\n  const deleteAddress = async () => {\n    setLoadingDelete(true);\n    const response = await deleteAddressApi(address._id, logout);\n    if (response) setReloadAddreses(true);\n    setLoadingDelete(false);\n  };\n\n  return (\n    <div className=\"address\">\n      <p>{address.title}</p>\n      <p>{address.name}</p>\n      <p>{address.address}</p>\n      <p>\n        {address.state}, {address.city} {address.postalCode}\n      </p>\n      <p>{address.phone}</p>\n\n      <div className=\"actions\">\n        <Button\n          primary\n          onClick={() => openModal(`Editar: ${address.title}`, address)}\n        >\n          Editar\n        </Button>\n        <Button onClick={deleteAddress} loading={loadingDelete}>\n          Eliminar\n        </Button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}