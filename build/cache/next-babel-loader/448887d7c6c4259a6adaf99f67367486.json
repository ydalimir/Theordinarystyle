{"ast":null,"code":"var _jsxFileName = \"/home/ydalimir/Escritorio/client/components/Account/ChangeNameForm/ChangeNameForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { updateNameApi } from \"../../../api/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangeNameForm(props) {\n  const {\n    user,\n    logout,\n    setReloadUser\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: initialValues(user.name, user.lastname),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formData => {\n      setLoading(true);\n      const response = await updateNameApi(user.id, formData, logout);\n\n      if (!response) {\n        toast.error(\"Error al actualizar el nombre y apellidos\");\n      } else {\n        setReloadUser(true);\n        toast.success(\"Nombre y apellidos actualizado\");\n      }\n\n      setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-name-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cambia tu nombre y apellidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"name\",\n          placeholder: \"Tu nuevo nombre\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          error: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          name: \"lastname\",\n          placeholder: \"Tus nuevos apellidos\",\n          onChange: formik.handleChange,\n          value: formik.values.lastname,\n          error: formik.errors.lastname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit\",\n        loading: loading,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\nfunction initialValues(name, lastname) {\n  return {\n    name: name || \"\",\n    lastname: lastname || \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    name: Yup.string().required(true),\n    lastname: Yup.string().required(true)\n  };\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/components/Account/ChangeNameForm/ChangeNameForm.js"],"names":["React","useState","Form","Button","useFormik","Yup","toast","updateNameApi","ChangeNameForm","props","user","logout","setReloadUser","loading","setLoading","formik","initialValues","name","lastname","validationSchema","object","onSubmit","formData","response","id","error","success","handleSubmit","handleChange","values","errors","string","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { updateNameApi } from \"../../../api/user\";\n\nexport default function ChangeNameForm(props) {\n  const { user, logout, setReloadUser } = props;\n  const [loading, setLoading] = useState(false);\n\n  const formik = useFormik({\n    initialValues: initialValues(user.name, user.lastname),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      const response = await updateNameApi(user.id, formData, logout);\n      if (!response) {\n        toast.error(\"Error al actualizar el nombre y apellidos\");\n      } else {\n        setReloadUser(true);\n        toast.success(\"Nombre y apellidos actualizado\");\n      }\n      setLoading(false);\n    },\n  });\n\n  return (\n    <div className=\"change-name-form\">\n      <h4>Cambia tu nombre y apellidos</h4>\n      <Form onSubmit={formik.handleSubmit}>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            name=\"name\"\n            placeholder=\"Tu nuevo nombre\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            error={formik.errors.name}\n          />\n          <Form.Input\n            name=\"lastname\"\n            placeholder=\"Tus nuevos apellidos\"\n            onChange={formik.handleChange}\n            value={formik.values.lastname}\n            error={formik.errors.lastname}\n          />\n        </Form.Group>\n        <Button className=\"submit\" loading={loading}>\n          Actualizar\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nfunction initialValues(name, lastname) {\n  return {\n    name: name || \"\",\n    lastname: lastname || \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    name: Yup.string().required(true),\n    lastname: Yup.string().required(true),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}