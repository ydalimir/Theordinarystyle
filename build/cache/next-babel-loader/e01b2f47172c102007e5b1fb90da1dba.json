{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nexport function registerApi(_x) {\n  return _registerApi.apply(this, arguments);\n}\n\nfunction _registerApi() {\n  _registerApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n    var url, params, response, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/auth/local/register\");\n            params = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(formData)\n            };\n            _context.next = 5;\n            return fetch(url, params);\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _registerApi.apply(this, arguments);\n}\n\nexport function loginApi(_x2) {\n  return _loginApi.apply(this, arguments);\n}\n\nfunction _loginApi() {\n  _loginApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n    var url, params, response, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/auth/local\");\n            params = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(formData)\n            };\n            _context2.next = 5;\n            return fetch(url, params);\n\n          case 5:\n            response = _context2.sent;\n            _context2.next = 8;\n            return response.json();\n\n          case 8:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            return _context2.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 12]]);\n  }));\n  return _loginApi.apply(this, arguments);\n}\n\nexport function resetPasswordApi(_x3) {\n  return _resetPasswordApi.apply(this, arguments);\n}\n\nfunction _resetPasswordApi() {\n  _resetPasswordApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var url, params, response, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/auth/forgot-password\");\n            params = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            };\n            _context3.next = 5;\n            return fetch(url, params);\n\n          case 5:\n            response = _context3.sent;\n            _context3.next = 8;\n            return response.json();\n\n          case 8:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", result);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            return _context3.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 12]]);\n  }));\n  return _resetPasswordApi.apply(this, arguments);\n}\n\nexport function getMeApi(_x4) {\n  return _getMeApi.apply(this, arguments);\n}\n\nfunction _getMeApi() {\n  _getMeApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(logout) {\n    var url, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/users/me\");\n            _context4.next = 4;\n            return authFetch(url, null, logout);\n\n          case 4:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result ? result : null);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n  return _getMeApi.apply(this, arguments);\n}\n\nexport function updateNameApi(_x5, _x6, _x7) {\n  return _updateNameApi.apply(this, arguments);\n}\n\nfunction _updateNameApi() {\n  _updateNameApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(idUser, data, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/users/\").concat(idUser);\n            params = {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(data)\n            };\n            _context5.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result ? result : null);\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(_context5.t0);\n            return _context5.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 9]]);\n  }));\n  return _updateNameApi.apply(this, arguments);\n}\n\nexport function updateEmailApi(_x8, _x9, _x10) {\n  return _updateEmailApi.apply(this, arguments);\n}\n\nfunction _updateEmailApi() {\n  _updateEmailApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(idUser, email, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/users/\").concat(idUser);\n            params = {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            };\n            _context6.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", result ? result : null);\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n            return _context6.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 9]]);\n  }));\n  return _updateEmailApi.apply(this, arguments);\n}\n\nexport function updatePasswordApi(_x11, _x12, _x13) {\n  return _updatePasswordApi.apply(this, arguments);\n}\n\nfunction _updatePasswordApi() {\n  _updatePasswordApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(idUser, password, logout) {\n    var url, params, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            url = \"\".concat(BASE_PATH, \"/users/\").concat(idUser);\n            params = {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                password: password\n              })\n            };\n            _context7.next = 5;\n            return authFetch(url, params, logout);\n\n          case 5:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", result ? result : null);\n\n          case 9:\n            _context7.prev = 9;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n            return _context7.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 9]]);\n  }));\n  return _updatePasswordApi.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/client/api/user.js"],"names":["BASE_PATH","authFetch","registerApi","formData","url","params","method","headers","body","JSON","stringify","fetch","response","json","result","console","log","loginApi","resetPasswordApi","email","getMeApi","logout","updateNameApi","idUser","data","updateEmailApi","updatePasswordApi","password"],"mappings":"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","sourcesContent":["import { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\n\nexport async function registerApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function loginApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function resetPasswordApi(email) {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getMeApi(logout) {\n  try {\n    const url = `${BASE_PATH}/users/me`;\n    const result = await authFetch(url, null, logout);\n    return result ? result : null;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function updateNameApi(idUser, data, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function updateEmailApi(idUser, email, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function updatePasswordApi(idUser, password, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}