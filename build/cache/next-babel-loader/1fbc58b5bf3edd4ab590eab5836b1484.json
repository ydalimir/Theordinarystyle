{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { size, includes, remove } from \"lodash\";\nimport { BASE_PATH, CART } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nexport function getProductsCart() {\n  const cart = localStorage.getItem(CART);\n\n  if (!cart) {\n    return null;\n  } else {\n    const products = cart.split(\",\");\n    return products;\n  }\n}\nexport function addProductCart(product) {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    localStorage.setItem(CART, product);\n    toast.success(\"Producto a単adido al carrito\");\n  } else {\n    const productFound = includes(cart, product);\n\n    if (productFound) {\n      toast.warning(\"Este producto ya esta en el carrito\");\n    } else {\n      cart.push(product);\n      localStorage.setItem(CART, cart);\n      toast.success(\"Producto a単adido correctamente\");\n    }\n  }\n}\nexport function countProductsCart() {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    return 0;\n  } else {\n    return size(cart);\n  }\n}\nexport function removeProductCart(product) {\n  const cart = getProductsCart();\n  remove(cart, item => {\n    return item === product;\n  });\n\n  if (size(cart) > 0) {\n    localStorage.setItem(CART, cart);\n  } else {\n    localStorage.removeItem(CART);\n  }\n}\nexport async function paymentCartApi(token, products, idUser, address, logout) {\n  try {\n    const addressShipping = address;\n    delete addressShipping.user;\n    delete addressShipping.createdAt;\n    const url = `${BASE_PATH}/orders`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token,\n        products,\n        idUser,\n        addressShipping\n      })\n    };\n    const result = await authFetch(url, params, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport function removeAllProductsCart() {\n  localStorage.removeItem(CART);\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/api/cart.js"],"names":["toast","size","includes","remove","BASE_PATH","CART","authFetch","getProductsCart","cart","localStorage","getItem","products","split","addProductCart","product","setItem","success","productFound","warning","push","countProductsCart","removeProductCart","item","removeItem","paymentCartApi","token","idUser","address","logout","addressShipping","user","createdAt","url","params","method","headers","body","JSON","stringify","result","error","console","log","removeAllProductsCart"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { size, includes, remove } from \"lodash\";\nimport { BASE_PATH, CART } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\n\nexport function getProductsCart() {\n  const cart = localStorage.getItem(CART);\n\n  if (!cart) {\n    return null;\n  } else {\n    const products = cart.split(\",\");\n    return products;\n  }\n}\n\nexport function addProductCart(product) {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    localStorage.setItem(CART, product);\n    toast.success(\"Producto a単adido al carrito\");\n  } else {\n    const productFound = includes(cart, product);\n    if (productFound) {\n      toast.warning(\"Este producto ya esta en el carrito\");\n    } else {\n      cart.push(product);\n      localStorage.setItem(CART, cart);\n      toast.success(\"Producto a単adido correctamente\");\n    }\n  }\n}\n\nexport function countProductsCart() {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    return 0;\n  } else {\n    return size(cart);\n  }\n}\n\nexport function removeProductCart(product) {\n  const cart = getProductsCart();\n\n  remove(cart, (item) => {\n    return item === product;\n  });\n\n  if (size(cart) > 0) {\n    localStorage.setItem(CART, cart);\n  } else {\n    localStorage.removeItem(CART);\n  }\n}\n\nexport async function paymentCartApi(token, products, idUser, address, logout) {\n  try {\n    const addressShipping = address;\n    delete addressShipping.user;\n    delete addressShipping.createdAt;\n\n    const url = `${BASE_PATH}/orders`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token,\n        products,\n        idUser,\n        addressShipping,\n      }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport function removeAllProductsCart() {\n  localStorage.removeItem(CART);\n}\n"]},"metadata":{},"sourceType":"module"}