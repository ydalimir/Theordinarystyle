{"ast":null,"code":"import { BASE_PATH } from \"../utils/constants\";\nexport async function getLastGamesApi(limit) {\n  try {\n    const limitItems = `_limit=${limit}`;\n    const sortItem = \"_sort=createdAt:desc\";\n    const url = `${BASE_PATH}/games?${limitItems}&${sortItem}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getGamesPlatformApi(platform, limit, start) {\n  try {\n    const limitItems = `_limit=${limit}`;\n    const sortItems = `_sort=createdAt:desc`;\n    const startItems = `_start=${start}`;\n    const url = `${BASE_PATH}/games?platform.url=${platform}&${limitItems}&${sortItems}&${startItems}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getTotalGamesPlatformApi(platform) {\n  try {\n    const url = `${BASE_PATH}/games/count?platform.url=${platform}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getGameByUrlApi(path) {\n  try {\n    const url = `${BASE_PATH}/games?url=${path}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result[0];\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function searchGamesApi(title) {\n  try {\n    const url = `${BASE_PATH}/games?_q=${title}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/api/game.js"],"names":["BASE_PATH","getLastGamesApi","limit","limitItems","sortItem","url","response","fetch","result","json","error","console","log","getGamesPlatformApi","platform","start","sortItems","startItems","getTotalGamesPlatformApi","getGameByUrlApi","path","searchGamesApi","title"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAO,eAAeC,eAAf,CAA+BC,KAA/B,EAAsC;AAC3C,MAAI;AACF,UAAMC,UAAU,GAAI,UAASD,KAAM,EAAnC;AACA,UAAME,QAAQ,GAAG,sBAAjB;AACA,UAAMC,GAAG,GAAI,GAAEL,SAAU,UAASG,UAAW,IAAGC,QAAS,EAAzD;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD,GAPD,CAOE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACD;AACF;AAED,OAAO,eAAeG,mBAAf,CAAmCC,QAAnC,EAA6CZ,KAA7C,EAAoDa,KAApD,EAA2D;AAChE,MAAI;AACF,UAAMZ,UAAU,GAAI,UAASD,KAAM,EAAnC;AACA,UAAMc,SAAS,GAAI,sBAAnB;AACA,UAAMC,UAAU,GAAI,UAASF,KAAM,EAAnC;AACA,UAAMV,GAAG,GAAI,GAAEL,SAAU,uBAAsBc,QAAS,IAAGX,UAAW,IAAGa,SAAU,IAAGC,UAAW,EAAjG;AACA,UAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD,GARD,CAQE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACD;AACF;AAED,OAAO,eAAeQ,wBAAf,CAAwCJ,QAAxC,EAAkD;AACvD,MAAI;AACF,UAAMT,GAAG,GAAI,GAAEL,SAAU,6BAA4Bc,QAAS,EAA9D;AACA,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACD;AACF;AAED,OAAO,eAAeS,eAAf,CAA+BC,IAA/B,EAAqC;AAC1C,MAAI;AACF,UAAMf,GAAG,GAAI,GAAEL,SAAU,cAAaoB,IAAK,EAA3C;AACA,UAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAM,CAAC,CAAD,CAAb;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACD;AACF;AAED,OAAO,eAAeW,cAAf,CAA8BC,KAA9B,EAAqC;AAC1C,MAAI;AACF,UAAMjB,GAAG,GAAI,GAAEL,SAAU,aAAYsB,KAAM,EAA3C;AACA,UAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import { BASE_PATH } from \"../utils/constants\";\n\nexport async function getLastGamesApi(limit) {\n  try {\n    const limitItems = `_limit=${limit}`;\n    const sortItem = \"_sort=createdAt:desc\";\n    const url = `${BASE_PATH}/games?${limitItems}&${sortItem}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getGamesPlatformApi(platform, limit, start) {\n  try {\n    const limitItems = `_limit=${limit}`;\n    const sortItems = `_sort=createdAt:desc`;\n    const startItems = `_start=${start}`;\n    const url = `${BASE_PATH}/games?platform.url=${platform}&${limitItems}&${sortItems}&${startItems}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getTotalGamesPlatformApi(platform) {\n  try {\n    const url = `${BASE_PATH}/games/count?platform.url=${platform}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getGameByUrlApi(path) {\n  try {\n    const url = `${BASE_PATH}/games?url=${path}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result[0];\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function searchGamesApi(title) {\n  try {\n    const url = `${BASE_PATH}/games?_q=${title}`;\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}