{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ydalimir/Documentos/GitHub/Theordinarystyle/components/Auth/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { loginApi, resetPasswordApi } from \"../../../api/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(props) {\n  _s();\n\n  var showRegisterForm = props.showRegisterForm,\n      onCloseModal = props.onCloseModal;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return loginApi(formData);\n\n              case 3:\n                response = _context.sent;\n\n                if (response !== null && response !== void 0 && response.jwt) {\n                  login(response.jwt);\n                  onCloseModal();\n                } else {\n                  toast.error(\"El email o la contraseña son incorrectos\");\n                }\n\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var resetPassword = function resetPassword() {\n    formik.setErrors({});\n    var validateEmail = Yup.string().email().required();\n\n    if (!validateEmail.isValidSync(formik.values.identifier)) {\n      formik.setErrors({\n        identifier: true\n      });\n    } else {\n      resetPasswordApi(formik.values.identifier);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"identifier\",\n      type: \"text\",\n      placeholder: \"Correo electronico\",\n      onChange: formik.handleChange,\n      error: formik.errors.identifier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: formik.handleChange,\n      error: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        onClick: showRegisterForm,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"submit\",\n          type: \"submit\",\n          loading: loading,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: resetPassword,\n          children: \"\\xBFHas olvidado la contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"mzG8ZiA5aK9kT9GOLWvfjZUMMOk=\", false, function () {\n  return [useAuth, useFormik];\n});\n\n_c = LoginForm;\n\nfunction initialValues() {\n  return {\n    identifier: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    identifier: Yup.string().email(true).required(true),\n    password: Yup.string().required(true)\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/Theordinarystyle/components/Auth/LoginForm/LoginForm.js"],"names":["React","useState","Form","Button","useFormik","Yup","toast","useAuth","loginApi","resetPasswordApi","LoginForm","props","showRegisterForm","onCloseModal","loading","setLoading","login","formik","initialValues","validationSchema","object","onSubmit","formData","response","jwt","error","resetPassword","setErrors","validateEmail","string","email","required","isValidSync","values","identifier","handleSubmit","handleChange","errors","password"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { loginApi, resetPasswordApi } from \"../../../api/user\";\n\nexport default function LoginForm(props) {\n  const { showRegisterForm, onCloseModal } = props;\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData) => {\n      setLoading(true);\n      const response = await loginApi(formData);\n      if (response?.jwt) {\n        login(response.jwt);\n        onCloseModal();\n      } else {\n        toast.error(\"El email o la contraseña son incorrectos\");\n      }\n      setLoading(false);\n    },\n  });\n\n  const resetPassword = () => {\n    formik.setErrors({});\n    const validateEmail = Yup.string().email().required();\n\n    if (!validateEmail.isValidSync(formik.values.identifier)) {\n      formik.setErrors({ identifier: true });\n    } else {\n      resetPasswordApi(formik.values.identifier);\n    }\n  };\n\n  return (\n    <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n      <Form.Input\n        name=\"identifier\"\n        type=\"text\"\n        placeholder=\"Correo electronico\"\n        onChange={formik.handleChange}\n        error={formik.errors.identifier}\n      />\n      <Form.Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Contraseña\"\n        onChange={formik.handleChange}\n        error={formik.errors.password}\n      />\n\n      <div className=\"actions\">\n        <Button type=\"button\" basic onClick={showRegisterForm}>\n          Registrarse\n        </Button>\n        <div>\n          <Button className=\"submit\" type=\"submit\" loading={loading}>\n            Entrar\n          </Button>\n          <Button type=\"button\" onClick={resetPassword}>\n            ¿Has olvidado la contraseña?\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n\nfunction initialValues() {\n  return {\n    identifier: \"\",\n    password: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {\n    identifier: Yup.string().email(true).required(true),\n    password: Yup.string().required(true),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}