{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { toast } from \"react-toastify\";\nimport { size, includes, remove } from \"lodash\";\nimport { BASE_PATH, CART } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nexport function getProductsCart() {\n  var cart = localStorage.getItem(CART);\n\n  if (!cart) {\n    return null;\n  } else {\n    var products = cart.split(\",\");\n    return products;\n  }\n}\nexport function addProductCart(product) {\n  var cart = getProductsCart();\n\n  if (!cart) {\n    localStorage.setItem(CART, product);\n    toast.success(\"Producto a単adido al carrito\");\n  } else {\n    var productFound = includes(cart, product);\n\n    if (productFound) {\n      toast.warning(\"Este producto ya esta en el carrito\");\n    } else {\n      cart.push(product);\n      localStorage.setItem(CART, cart);\n      toast.success(\"Producto a単adido correctamente\");\n    }\n  }\n}\nexport function countProductsCart() {\n  var cart = getProductsCart();\n\n  if (!cart) {\n    return 0;\n  } else {\n    return size(cart);\n  }\n}\nexport function removeProductCart(product) {\n  var cart = getProductsCart();\n  remove(cart, function (item) {\n    return item === product;\n  });\n\n  if (size(cart) > 0) {\n    localStorage.setItem(CART, cart);\n  } else {\n    localStorage.removeItem(CART);\n  }\n}\nexport function paymentCartApi(_x, _x2, _x3, _x4, _x5) {\n  return _paymentCartApi.apply(this, arguments);\n}\n\nfunction _paymentCartApi() {\n  _paymentCartApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token, products, idUser, address, logout) {\n    var addressShipping, url, params, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            addressShipping = address;\n            delete addressShipping.user;\n            delete addressShipping.createdAt;\n            url = \"\".concat(BASE_PATH, \"/orders\");\n            params = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                token: token,\n                products: products,\n                idUser: idUser,\n                addressShipping: addressShipping\n              })\n            };\n            _context.next = 8;\n            return authFetch(url, params, logout);\n\n          case 8:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _paymentCartApi.apply(this, arguments);\n}\n\nexport function removeAllProductsCart() {\n  localStorage.removeItem(CART);\n}","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/client/api/cart.js"],"names":["toast","size","includes","remove","BASE_PATH","CART","authFetch","getProductsCart","cart","localStorage","getItem","products","split","addProductCart","product","setItem","success","productFound","warning","push","countProductsCart","removeProductCart","item","removeItem","paymentCartApi","token","idUser","address","logout","addressShipping","user","createdAt","url","params","method","headers","body","JSON","stringify","result","console","log","removeAllProductsCart"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { size, includes, remove } from \"lodash\";\nimport { BASE_PATH, CART } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\n\nexport function getProductsCart() {\n  const cart = localStorage.getItem(CART);\n\n  if (!cart) {\n    return null;\n  } else {\n    const products = cart.split(\",\");\n    return products;\n  }\n}\n\nexport function addProductCart(product) {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    localStorage.setItem(CART, product);\n    toast.success(\"Producto a単adido al carrito\");\n  } else {\n    const productFound = includes(cart, product);\n    if (productFound) {\n      toast.warning(\"Este producto ya esta en el carrito\");\n    } else {\n      cart.push(product);\n      localStorage.setItem(CART, cart);\n      toast.success(\"Producto a単adido correctamente\");\n    }\n  }\n}\n\nexport function countProductsCart() {\n  const cart = getProductsCart();\n\n  if (!cart) {\n    return 0;\n  } else {\n    return size(cart);\n  }\n}\n\nexport function removeProductCart(product) {\n  const cart = getProductsCart();\n\n  remove(cart, (item) => {\n    return item === product;\n  });\n\n  if (size(cart) > 0) {\n    localStorage.setItem(CART, cart);\n  } else {\n    localStorage.removeItem(CART);\n  }\n}\n\nexport async function paymentCartApi(token, products, idUser, address, logout) {\n  try {\n    const addressShipping = address;\n    delete addressShipping.user;\n    delete addressShipping.createdAt;\n\n    const url = `${BASE_PATH}/orders`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token,\n        products,\n        idUser,\n        addressShipping,\n      }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport function removeAllProductsCart() {\n  localStorage.removeItem(CART);\n}\n"]},"metadata":{},"sourceType":"module"}