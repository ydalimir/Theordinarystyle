{"ast":null,"code":"import { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\nexport async function registerApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function loginApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function resetPasswordApi(email) {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function getMeApi(logout) {\n  try {\n    const url = `${BASE_PATH}/users/me`;\n    const result = await authFetch(url, null, logout);\n    return result ? result : null;\n  } catch (error) {\n    return null;\n  }\n}\nexport async function updateNameApi(idUser, data, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function updateEmailApi(idUser, email, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function updatePasswordApi(idUser, password, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      })\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/ydalimir/Escritorio/client/api/user.js"],"names":["BASE_PATH","authFetch","registerApi","formData","url","params","method","headers","body","JSON","stringify","response","fetch","result","json","error","console","log","loginApi","resetPasswordApi","email","getMeApi","logout","updateNameApi","idUser","data","updateEmailApi","updatePasswordApi","password"],"mappings":"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","sourcesContent":["import { BASE_PATH } from \"../utils/constants\";\nimport { authFetch } from \"../utils/fetch\";\n\nexport async function registerApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function loginApi(formData) {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function resetPasswordApi(email) {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function getMeApi(logout) {\n  try {\n    const url = `${BASE_PATH}/users/me`;\n    const result = await authFetch(url, null, logout);\n    return result ? result : null;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function updateNameApi(idUser, data, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function updateEmailApi(idUser, email, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function updatePasswordApi(idUser, password, logout) {\n  try {\n    const url = `${BASE_PATH}/users/${idUser}`;\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password }),\n    };\n    const result = await authFetch(url, params, logout);\n    return result ? result : null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}